[
    {
        "state": 0,
        "stateId": 0,
        "op": "RI ← (PC), PC ← PC + 1"
    },
    {
        "state": 1,
        "stateId": 1,
        "op": "DECODE"
    },
    {
        "state": 2,
        "stateId": 2,
        "op": "B ← (F)"
    },
    {
        "state": 6,
        "stateId": 3,
        "op": "A ← (D)"
    },
    {
        "state": 7,
        "stateId": 4,
        "op": "(D) ← A + B; load FZ"
    },
    {
        "state": 9,
        "stateId": 5,
        "op": "A ⨁ B load FZ"
    },
    {
        "state": 10,
        "stateId": 6,
        "op": "(D) ← B"
    },
    {
        "state": 11,
        "stateId": 7,
        "op": "if FZ = 1; RI ← (D); PC ← D + 1"
    },
    {
        "state": 5,
        "stateId": 7,
        "op": "(D) ← A + B; load FZ"
    }
]